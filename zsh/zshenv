# set XDG_CONFIG_HOME if not defined
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME-$HOME/.config}

# export ZDOTDIR=${ZDOTDIR-$HOME}
export ZDOTDIR=$HOME
export HISTFILE=$ZDOTDIR/.zsh_record
export ZSH=$ZDOTDIR/.oh-my-zsh
export ZSH_CUSTOM=$ZSH/custom
# export SPACESHIP_CONFIG="$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh"

export OUTSIDE_DOCKER_HOST="172.17.0.1"
# export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock"

# if a .env file exists, source it
ENV_FILE=$HOME/.env
if test -f "$ENV_FILE"; then
    set -a; source $ENV_FILE; set +a
fi 

# add sbins to path
PATH="$PATH:/usr/sbin:$HOME/bin:/usr/local/sbin"

export PATH=$(go env GOPATH)/bin:$PATH 

# if gcloud is defined, set access token env variable
# if [ -n $(command -v gcloud) ]; then
#     export CLOUDSDK_AUTH_ACCESS_TOKEN=$(gcloud auth application-default print-access-token)
# fi

# setup npm location
if [ -d $HOME/node ]; then
    # add to path
    export PATH="$PATH:$HOME/node/node_modules/.bin"
fi

# Add cargo if it exists
if [ -d $HOME/.cargo/env ]; then
    source "$HOME/.cargo/env"
fi

# Add atuin if it exists
if [ -d $HOME/.atuin/bin ]; then
    export PATH="$PATH:$HOME/.atuin/bin"
    source "$HOME/.atuin/bin/env"
fi

# add share to path if it exists
if [ -d $HOME/.local/share/coursier/bin/ ]; then
    export PATH="$PATH:$HOME/.local/share/coursier/bin"
fi

# add local bin to path
if [ -d $HOME/.local/bin ]; then
    export PATH="$PATH:$HOME/.local/bin"
fi

# add pyenv to path if exists
if [ -d $HOME/.pyenv ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PATH:$PYENV_ROOT/bin"
    eval "$(pyenv init - zsh)"
fi

typeset -U PATH path

jdiff() {
    diff <(jq --sort-keys <<< $1) <(jq --sort-keys <<< $2)
}

if [ -e /home/crosleyzack/.nix-profile/etc/profile.d/nix.sh ]; then . /home/crosleyzack/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
